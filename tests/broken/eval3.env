type Eval = 
     rec evalFun . forall evalObj <: {{ eval : ^('evalFun) }} . [ref 'evalObj] -> Num

type Evalable =
     forall obj <: {{ eval : ^(Eval) }} . ref 'obj

type EvalPlus =
     rec plusEvalFun . 
        forall evalableLeft <: {{ eval : ^(Eval) }} .
        forall evalableRight <: {{ eval : ^(Eval) }} .
        forall plusObj <: {{ eval : ^('plusEvalFun), left : ref 'evalableLeft, right : ref 'evalableRight }} . [ref 'plusObj] -> Num

type EvalNum =
     rec numEvalFun .
        forall numObj <: {{ eval : ^('numEvalFun), "val" : Num }} . [ref 'numObj] -> Num

type Simplify =
     rec simplifyFun . forall simplifyObj <: {{ eval : ^Eval, simplify : ^('simplifyFun) }} . [ref 'simplifyObj] -> ref 'simplifyObj

type Simplifiable =
     forall obj <: {{ eval : ^Eval, simplify : ^Simplify }} . ref 'obj

type SimplifyNum =
     rec numSimplFun .
        forall numObj <: {{ eval : ^EvalNum, simplify : ^('numSimplFun), "val" : Num }} . [ref 'numObj] -> ref 'numObj

type SimplifyPlus =
     rec plusSimplFun . 
        forall simplLeft <: {{ eval : ^Eval, simplify : ^(Simplify) }} .
        forall simplRight <: {{ eval : ^Eval, simplify : ^(Simplify) }} .
        forall plusObj <: {{ eval : ^Eval, simplify : ^('plusSimplFun), left : ref 'simplLeft, right : ref 'simplRight }} . [ref 'plusObj] -> ref 'plusObj

type PrPlus =
     ref {{__proto__ : Null, eval : EvalPlus, simplify : SimplifyPlus, *: _ }}

type PrNum =
     ref {{__proto__ : Null, eval : EvalNum, simplify : SimplifyNum, * : _}}