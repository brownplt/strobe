type Point_dist<foo> =
     [{{x: ref Num, y : ref Num}}] -> Num

type Point<foo> =
     { dist : ref Point_dist<Num>, "__proto__" : Null, *: _ }

type ptPr<foo> =
     { dist : ref ([] -> Num), "__proto__" : Null, *: _}

type ColorPoint_setColor<foo> =
     [{{x: ref Num, y : ref Num, color : ref Str}}] Str -> Undef

type cpt<foo> = {{ 
     x: ref Num, 
     y : ref Num, 
     color : ref Str, 
     dist :_, 
     setColor: _,
     "__class__" : {
       setColor : ref (ColorPoint_setColor<Num>),
       "__proto__" : Point<Num>, 
       * : _
     },
     "__proto__" : {
       setColor : ref ([Str] -> Undef), 
       "__proto__" : ptPr<Num>, 
       * : _
     } 
  }}
