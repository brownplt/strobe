type Point_dist =
     [{{x: ref Num, y : ref Num}}] -> Num

type Point =
     { dist : ref Point_dist, "__proto__" : Null, *: _ }

type ptPr =
     { dist : ref ([] -> Num), "__proto__" : Null, *: _}

type ColorPoint_setColor =
     [{{x: ref Num, y : ref Num, color : ref Str}}] Str -> Undef

type cpt = {{x: ref Num, y : ref Num, color : ref Str, dist :_, setColor: _,
	     "__class__" : {setColor : ref ColorPoint_setColor, "__proto__" : Point, * : _},
	     "__proto__" : {setColor : ref ([Str] -> Undef), "__proto__" : ptPr, * : _} }}
