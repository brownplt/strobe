type Extension = rec x . Num + Str + Bool + Undef + Null + {
  *: x,
  '[[code]]':? x ... -> x
}

abstype nsIID

abstype nsIProperties
abstype nsIFile
abstype nsILocalFile

type nsFile = #{
  append : (Str -> Undef)@unsafe,
  path : Str,
  QueryInterface : (nsIFile -> nsFile) &
                   (nsILocalFile -> nsLocalFile),
  directoryEntries : #{
    hasMoreElements :  -> Bool,
    getNext : -> nsIFile
  },
  * : Extension
}

type nsLocalFile = #{
  __proto__ : nsFile,
  initWithPath : (Str -> Undef),
  * : Extension
}

type DirectoryServiceClass = #{
  getService: nsIProperties -> #{ 
    get: (Str * nsIFile -> nsFile) & 
         (Str * nsIID -> Object)
  }
}

type LocalFileClass = #{
  createInstance : nsILocalFile -> nsLocalFile
}
type ClassesType = #{
  "@mozilla.org/file/directory_service;1": DirectoryServiceClass,
  "@mozilla.org/file/local;1": LocalFileClass,
  "@mozilla.org/dom/storagemanager;1" : nsDOMStorageManagerClass
}


type ComponentsType = #{ 
  classes : ClassesType,
  interfaces : #{
    nsIProperties : nsIProperties,
    nsIFile : nsIFile,
    nsILocalFile : nsILocalFile,
    * : nsIID
  }
}

Components : ComponentsType

abstype nsIDOMStorage

type nsDOMStorage = {
 length : #Num,
 key : #(Num -> Str),
 getItem : #(Str -> (Str + Null)),
 setItem : #(Str, Any -> Undef)@unsafe,
 removeItem : #(Str -> Undef),
 clear : #( -> Undef),
 [0-9]+ : #Str, -- this is the index getter, and it's readonly
 * : Str@unsafe + #Str@safe -- this is the name getter/setter abilities, and setting is unsafe
}
type SessionStorage = {
 __proto__ : #nsDOMStorage,
 setItem : #(Str, Any -> Undef),
 * : Str
}
type LocalStorage = {
 __proto__ : #nsDOMStorage,
}
type Window = {
 sessionStorage : #SessionStorage,
 localStorage : #LocalStorage,
 globalStorage : #{
   * : LocalStorage
 }
}

abstype nsIDOMStorageManager

type nsDOMStorageManager = {
 clearOfflineApps : ( -> Undef)@unsafe,
 getLocalStorageForPrincipal : #(Ext, Str -> LocalStorage),  -- should be nsPrincipal, but who cares?
 getUsage : #(Str -> Num)
}

type nsDOMStorageManagerClass = {
 getService : nsIDOMStorageManager -> nsDOMStorageManager
}

