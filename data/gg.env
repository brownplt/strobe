// Based on http://code.google.com/apis/desktop/docs/gadget_apiref.html

gddSoundStateStopped : Int
gddSoundStatePlaying : Int

class Audioclip {
  balance : Int,
  currentPosition : Int,
  duration : Int,
  error: Int,
  src : String,
  state : Int,
  volume : Int,

  play : -> Void,
  pause : -> Void,
  stop : -> Void,

  //onStateChange : Audioclip * Int -> Void
}

class Menu  {
  AddItem : String * Int * ({ } -> Void) -> Void
}

class BasicElement {
  cursor : String,
  dropTarget : Boolean, 
  enabled : Boolean,
  height : Int,
  hitTest : String,
  mask : String,
  name : String,        
  offsetHeight : Int,   
  offsetWidth : Int,
  offsetX : Int, //note: these offsets are read only
  offsetY : Int,
  opacity : Int,
  parentElement : BasicElement,
  pinX : Int,
  pinY : Int,
  rotation : Number,
  tagName : String,
  tooltip : String,
  width : Int,
  visible : Boolean,
  x : Int,
  y : Int
}

class Button prototype BasicElement {
  image : String,
  overImage : String,
  downImage : String,
  disabledImage : String
}

class Img prototype BasicElement {
  colorMultiply : String,
  cropMaintainAspect : String,
  src : String,
  srcHeight : Int,
  srcWidth : Int,
  setSrcSize : Int * Int -> Void
}

class Label prototype BasicElement {
  align : String,
  bold : Boolean,
  color : String,
  font : String,
  innerText : String,
  italic : Boolean,
  size : Int,
  strikeout : Boolean,
  trimming : String,
  underline : Boolean,   
  vAlign : String,
  wordWrap : Boolean
}

class Collection {
  //dnno wtf is here
}

class Event {
  returnValue : Boolean, //write-only
  srcElement : BasicElement,
  type : String,

  button : Int,
  wheelDelta : Int,
  x : Int, 
  y : Int,

  dragFiles : Collection,

  keyCode : Int,

  height : Int,
  width : Int,

  propertyName : String,

  cookie : Int,
  value : Int,

  perfmon : Any
}

class View prototype Global {
  alert : String -> Void,
  caption : String,
  event : Event,
  height : Int,
  width : Int,
  resizable : Bool,
  showCaptionAlways : Bool,

  beginAnimation : (-> Void) * Int * Int * Int -> Int,
  cancelAnimation : Int -> Void,

  setTimeout : (-> Void) * Int -> Int,
  setInterval : ( -> Void) * Int -> Int,
  clearInterval : Int -> Void,
  clearTimeout : Int -> Void
}

view : View

framework : {
  openURL : String -> Void,
  audio : {
    play : String * (Audioclip * Int -> Void) -> Audioclip
  }
}

options : { 
  getValue : String -> Any,
  putDefaultValue : String * Any -> Void,
  putValue : String * Any -> Void
}

event : Event

class Gadget {
  debug : { trace : String -> Void },
  storage : { extract : String -> String,
              openText : String -> String },
}

gadget : Gadget

plugin : { 
  onAddCustomMenuItems : (Menu -> Void) -> Void
}
